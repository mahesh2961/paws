// Generated by Dagger (https://google.github.io/dagger).
package in.paws.fragment;

import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class BaseListFragment_MembersInjector implements MembersInjector<BaseListFragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider;

  private final Provider<ViewModelProvider.Factory> vmFactoryProvider;

  public BaseListFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProvider.Factory> vmFactoryProvider) {
    this.childFragmentInjectorProvider = childFragmentInjectorProvider;
    this.vmFactoryProvider = vmFactoryProvider;
  }

  public static MembersInjector<BaseListFragment> create(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProvider.Factory> vmFactoryProvider) {
    return new BaseListFragment_MembersInjector(childFragmentInjectorProvider, vmFactoryProvider);
  }

  @Override
  public void injectMembers(BaseListFragment instance) {
    BaseFragment_MembersInjector.injectChildFragmentInjector(
        instance, childFragmentInjectorProvider.get());
    injectVmFactory(instance, vmFactoryProvider.get());
  }

  public static void injectVmFactory(
      BaseListFragment instance, ViewModelProvider.Factory vmFactory) {
    instance.vmFactory = vmFactory;
  }
}
