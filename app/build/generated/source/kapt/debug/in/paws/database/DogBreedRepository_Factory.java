// Generated by Dagger (https://google.github.io/dagger).
package in.paws.database;

import dagger.internal.Factory;
import in.paws.network.NetworkManager;
import javax.inject.Provider;

public final class DogBreedRepository_Factory implements Factory<DogBreedRepository> {
  private final Provider<DogBreedDao> dogBreedDaoProvider;

  private final Provider<NetworkManager> networkLayerProvider;

  public DogBreedRepository_Factory(
      Provider<DogBreedDao> dogBreedDaoProvider, Provider<NetworkManager> networkLayerProvider) {
    this.dogBreedDaoProvider = dogBreedDaoProvider;
    this.networkLayerProvider = networkLayerProvider;
  }

  @Override
  public DogBreedRepository get() {
    return provideInstance(dogBreedDaoProvider, networkLayerProvider);
  }

  public static DogBreedRepository provideInstance(
      Provider<DogBreedDao> dogBreedDaoProvider, Provider<NetworkManager> networkLayerProvider) {
    return new DogBreedRepository(dogBreedDaoProvider.get(), networkLayerProvider.get());
  }

  public static DogBreedRepository_Factory create(
      Provider<DogBreedDao> dogBreedDaoProvider, Provider<NetworkManager> networkLayerProvider) {
    return new DogBreedRepository_Factory(dogBreedDaoProvider, networkLayerProvider);
  }

  public static DogBreedRepository newDogBreedRepository(
      DogBreedDao dogBreedDao, NetworkManager networkLayer) {
    return new DogBreedRepository(dogBreedDao, networkLayer);
  }
}
