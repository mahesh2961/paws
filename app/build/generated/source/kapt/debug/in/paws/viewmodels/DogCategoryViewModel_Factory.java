// Generated by Dagger (https://google.github.io/dagger).
package in.paws.viewmodels;

import dagger.internal.Factory;
import in.paws.database.DogBreedRepository;
import javax.inject.Provider;

public final class DogCategoryViewModel_Factory implements Factory<DogCategoryViewModel> {
  private final Provider<DogBreedRepository> dogBreedRepositoryProvider;

  public DogCategoryViewModel_Factory(Provider<DogBreedRepository> dogBreedRepositoryProvider) {
    this.dogBreedRepositoryProvider = dogBreedRepositoryProvider;
  }

  @Override
  public DogCategoryViewModel get() {
    return provideInstance(dogBreedRepositoryProvider);
  }

  public static DogCategoryViewModel provideInstance(
      Provider<DogBreedRepository> dogBreedRepositoryProvider) {
    return new DogCategoryViewModel(dogBreedRepositoryProvider.get());
  }

  public static DogCategoryViewModel_Factory create(
      Provider<DogBreedRepository> dogBreedRepositoryProvider) {
    return new DogCategoryViewModel_Factory(dogBreedRepositoryProvider);
  }

  public static DogCategoryViewModel newDogCategoryViewModel(
      DogBreedRepository dogBreedRepository) {
    return new DogCategoryViewModel(dogBreedRepository);
  }
}
