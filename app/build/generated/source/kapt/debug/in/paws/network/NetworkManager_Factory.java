// Generated by Dagger (https://google.github.io/dagger).
package in.paws.network;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class NetworkManager_Factory implements Factory<NetworkManager> {
  private final Provider<ApiHandler> apiHandlerProvider;

  public NetworkManager_Factory(Provider<ApiHandler> apiHandlerProvider) {
    this.apiHandlerProvider = apiHandlerProvider;
  }

  @Override
  public NetworkManager get() {
    return provideInstance(apiHandlerProvider);
  }

  public static NetworkManager provideInstance(Provider<ApiHandler> apiHandlerProvider) {
    return new NetworkManager(apiHandlerProvider.get());
  }

  public static NetworkManager_Factory create(Provider<ApiHandler> apiHandlerProvider) {
    return new NetworkManager_Factory(apiHandlerProvider);
  }

  public static NetworkManager newNetworkManager(ApiHandler apiHandler) {
    return new NetworkManager(apiHandler);
  }
}
