// Generated by Dagger (https://google.github.io/dagger).
package in.paws.viewmodels;

import dagger.internal.Factory;
import in.paws.database.DogBreedRepository;
import javax.inject.Provider;

public final class CategoryImageViewModel_Factory implements Factory<CategoryImageViewModel> {
  private final Provider<DogBreedRepository> dogBreedRepositoryProvider;

  public CategoryImageViewModel_Factory(Provider<DogBreedRepository> dogBreedRepositoryProvider) {
    this.dogBreedRepositoryProvider = dogBreedRepositoryProvider;
  }

  @Override
  public CategoryImageViewModel get() {
    return provideInstance(dogBreedRepositoryProvider);
  }

  public static CategoryImageViewModel provideInstance(
      Provider<DogBreedRepository> dogBreedRepositoryProvider) {
    return new CategoryImageViewModel(dogBreedRepositoryProvider.get());
  }

  public static CategoryImageViewModel_Factory create(
      Provider<DogBreedRepository> dogBreedRepositoryProvider) {
    return new CategoryImageViewModel_Factory(dogBreedRepositoryProvider);
  }

  public static CategoryImageViewModel newCategoryImageViewModel(
      DogBreedRepository dogBreedRepository) {
    return new CategoryImageViewModel(dogBreedRepository);
  }
}
